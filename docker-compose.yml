# version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.app.dev
    image: my-laravel-app
    container_name: my-laravel-app
    restart: unless-stopped
    working_dir: /var/www
    # ports:
    #   - "9000:9000"
    volumes:
      - ./:/var/www
      - ./.env:/var/www/.env
    environment:
      - APP_ENV=local
      - DB_HOST=my-postgres
    networks:
      - app-network
    depends_on:
      - redis
      - db
    # For Dev
    # command: sh -c "php artisan optimize:clear && php artisan migrate && supervisord -n -c /etc/supervisor/conf.d/supervisord.conf" 
    ## For Prod
    command: sh -c "php artisan optimize:clear && php artisan migrate && php artisan config:cache && php artisan route:cache && php artisan view:cache && php artisan optimize && supervisord -n -c /etc/supervisor/conf.d/supervisord.conf"


  nginx:
    image: nginx:alpine
    container_name: my-nginx
    ports:
      - "80:80"
      # - "8001:8001"
    volumes:
      - ./:/var/www
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - app-network       

  node:
    build:
      context: .
      dockerfile: Dockerfile.node.dev
    image: my-laravel-node
    container_name: my-laravel-node
    ports:
      - "3000:3000"
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - /var/www/node_modules
    networks:
      - app-network
    # For Dev
    command: sh -c "npm run dev"
    

  db:
    image: postgres:16.3
    container_name: my-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: yahya
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    networks:
      - app-network
    ports:
      - "5432:5432"

  pgadmin:
    image: dpage/pgadmin4
    container_name: my-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "5050:80" # pgAdmin UI will be accessible on port 5050
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - app-network
    depends_on:
      - db

  redis:
    image: redis:alpine
    container_name: my-redis
    command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
    volumes:
      - ./data/redis:/data
    networks:
      - app-network
    ports:
      - "6379:6379"


networks:
  app-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
  pgadmin_data:
    driver: local
